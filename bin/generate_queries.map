{"version":3,"file":"generate_queries","sources":["../utils.js","../index.js","../bin.js"],"sourcesContent":["//@ts-check\r\n\r\nconst http = require('http');\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst { exec, execSync } = require('child_process')\r\n\r\n\r\n\r\nconst queriesInfoQuery = {\r\n   //    query : `{\r\n   //         __schema {\r\n   //         types {\r\n   //            name,\r\n   //            fields {\r\n   //               name\r\n   //            }\r\n   //         }\r\n   //         }\r\n   //      }\r\n   //   `,\r\n\r\n   query: `\r\n   {\r\n      __schema {\r\n         types {\r\n            name,\r\n            fields {\r\n               name,      \r\n               description,         \r\n               type {\r\n                  name,                  \r\n                  ofType {\r\n                     name                 \r\n                  }\r\n               }\r\n            }\r\n         },\r\n         mutationType{\r\n            name,\r\n            fields{\r\n               name,\r\n               description,\r\n\t\t\t\t\targs{\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\ttype{\r\n\t\t\t\t\t   \tofType{\r\n\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n               type{\r\n                  name,\r\n                  fields{\r\n                     name,\r\n                     type{\r\n                        fields{\r\n                           name,\r\n                           type{\r\n                              name,\r\n                              ofType{\r\n                                 name\r\n                              },\r\n                           }\r\n                        },\r\n\t\t\t\t\t\t\t\tofType{\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n                     },\r\n                  },\t\t\t\t\t\r\n               },\t\t\t\t\r\n            }\r\n         }         \r\n      }\r\n   }\r\n  `,\r\n\r\n   //   query: `\r\n   //   {\r\n   //       __schema {\r\n   //          types {\r\n   //             name,\r\n   //             fields {\r\n   //                name,\r\n   //                type {\r\n   //                   name,\r\n   //                   ofType {\r\n   //                      name                 \r\n   //                   },\r\n   //                   fields{\r\n   //                      name,\r\n   //                      type{\r\n   //                         name,\r\n   //                         fields{\r\n   //                            name,\r\n   //                            type{\r\n   //                               name\r\n   //                            }\r\n   //                         }\r\n   //                      }\r\n   //                   }          \r\n   //                }\r\n   //             }\r\n   //          }\r\n   //       }\r\n   //    }  \r\n   //   `,\r\n   variables: null\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {(arg: object) => void} typesHandler\r\n */\r\nfunction getTypes(typesHandler) {\r\n   const options = {\r\n      hostname: '127.0.0.1',\r\n      port: 8000,\r\n      path: '/graphql',\r\n      method: 'POST',\r\n      // maxHeaderSize: 65536,\r\n      headers: { 'Content-Type': 'application/json' }\r\n   }\r\n\r\n   const request = http.request(options, (response) => {\r\n\r\n      let data = ''\r\n\r\n      console.log(`statusCode: ${response.statusCode}`)\r\n      response.on('data', (d) => {\r\n         // при больщом объеме json выдает не весь ответ\r\n         // return typesHandler(JSON.parse(d.toString()));\r\n         data += d.toString();\r\n      });      //   process.stdout.write(d)      \r\n\r\n      response.on('end', () => {\r\n         if (response.statusCode == 200) return typesHandler(JSON.parse(data));\r\n         else {\r\n            fs.existsSync('.errors') || fs.mkdirSync('.errors')\r\n            // let errorFileName = path.dirname(__dirname) +'\\\\.errors\\\\error.html';            \r\n            fs.writeFileSync('.errors' + path.sep + 'error.html', data, {\r\n               flag: 'w'\r\n            })\r\n            try {\r\n               execSync('start .errors\\\\error.html')\r\n            }\r\n            catch {\r\n               try {\r\n                  execSync('start ' + 'http://' + options.hostname + ':' + options.port + options.path)\r\n               }\r\n               catch { }\r\n            }\r\n            finally {\r\n               throw new Error('data');\r\n            }\r\n         }\r\n      });\r\n   })\r\n\r\n   request.on('error', e => console.log(e));\r\n   request.write(JSON.stringify(queriesInfoQuery))\r\n   request.end()\r\n}\r\n\r\nmodule.exports = { getTypes }","//@ts-check\r\n\r\nconst fs = require('fs');\r\n\r\nconst getTypes = require(\"./utils\").getTypes;\r\n\r\n/**\r\n * \r\n * @param {string} targetFile - target file name\r\n * @param {{\r\n * \tinclude?:{\r\n * \t\tcomplex?: object, \r\n * \t\tbase?: string[]\t\t\t\t\t\t\r\n * \t}, \r\n * \tmutArgsFromDescMarks?: string,\t\t\t\t\t\t// == ':::' \r\n * \texclude?: string[], \t\t\t\t\t\t\t\t\t// names of entities (fields) to exclude\r\n * \ttemplate: string\r\n * }} options \r\n */\r\nfunction createQueries(targetFile, options) {\r\n\r\n\tlet includeTypes = Array.isArray(options?.include)\r\n\t\t? options.include\r\n\t\t: (options?.include?.base || []).concat(Object.keys(options?.include?.complex || {}))\r\n\r\n\t// getTypes((/** @type {any} */ data) => console.log(data))\r\n\tgetTypes((/** @type {any} */ response) => {\r\n\t\tconsole.log(response)\r\n\r\n\t\t// let types = response.data['__schema'].types;\t\t\r\n\t\tlet { types, mutationType: mutationTypes } = response.data['__schema'];\r\n\t\t// console.log(types);\r\n\r\n\r\n\t\tlet baseTypes = ['ID', 'String', 'Int', 'Boolean', 'DateTime', 'JSONString'];\r\n\r\n\t\tconst queries = types.shift().fields;\r\n\t\tlet mutations = mutationTypes.fields;\r\n\t\t\r\n\t\t/** @legacy condition */\r\n\t\tif (options.mutArgsFromDescMarks) mutations = mutationTypes.fields.filter(mutationFilter(options));\t\t\r\n\r\n\t\tlet jsDeclarations = '\\n';\r\n\r\n\t\tfor (const mutation of mutations) {\r\n\r\n\t\t\tlet inputFields = []\r\n\r\n\t\t\t/** @legacy condition */\r\n\t\t\tif (options.mutArgsFromDescMarks){\r\n\t\t\t\t/** @legacy */\r\n\t\t\t\tinputFields = mutation.description.substring(3).split('\\n')\r\n\t\t\t\t\t.filter(item => item.trim())\r\n\t\t\t\t\t.map(item => item.trim().split(':'));\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tinputFields = mutation.args.map((tp, i) => {\r\n\r\n\t\t\t\t\tif (~baseTypes.indexOf(tp.type.ofType?.name)){\r\n\t\t\t\t\t\treturn [tp.name, tp.type.ofType.name]\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet paramType = types.find(c => c.name == tp.type.ofType?.name);\r\n\t\t\t\t\tif (paramType){\r\n\t\t\t\t\t\tif (paramType.fields){\r\n\t\t\t\t\t\t\tconsole.warn('Not implemented!!!! TODO!');\r\n\t\t\t\t\t\t\t// debugger\r\n\t\t\t\t\t\t\treturn [tp.name, tp.type.ofType.name]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(mutation.description.trimLeft().startsWith(':::')) {\r\n\t\t\t\t\t\t\tvar argType = mutation.description.split(/:::\\d?/g)\r\n\t\t\t\t\t\t\t\t.filter(item => item.trim())[i]\r\n\t\t\t\t\t\t\t\t.split('\\n')\r\n\t\t\t\t\t\t\t\t.filter(item => item.trim())\r\n\t\t\t\t\t\t\t\t.map(item => item.trim().split(':'));\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(mutation.description.trimLeft().startsWith(':::')){\r\n\t\t\t\t\t\tvar argType = mutation.description.split(':::')\r\n\t\t\t\t\t\t\t.filter(item => item.trim())[i]\r\n\t\t\t\t\t\t\t.split('\\n')\r\n\t\t\t\t\t\t\t.filter(item => item.trim())\r\n\t\t\t\t\t\t\t.map(item => item.trim().split(':'));\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [tp.name, argType]\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst fieldTypes = mutation.type.fields;\r\n\t\t\tlet declTypes = [];\r\n\r\n\t\t\tfor (let fieldType of fieldTypes) {\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\tlet subFieldsList = null;\r\n\r\n\t\t\t\t\tif (fieldType.type.fields){\r\n\t\t\t\t\t\tsubFieldsList = fieldType.type.fields?.filter(f => ~baseTypes.indexOf(f.type.ofType?.name))\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (fieldType.type.ofType && !~baseTypes.indexOf(fieldType.type.ofType.name)){\r\n\t\t\t\t\t\tlet localType = types.find(c => c.name==fieldType.type.ofType.name);\r\n\t\t\t\t\t\tif (localType){\r\n\t\t\t\t\t\t\tsubFieldsList = localType.fields?.filter(f => ~baseTypes.indexOf(f.type.ofType?.name))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet subFields = ' '.repeat(16) + subFieldsList?.map(f => f.name).join(',\\n' + ' '.repeat(16));\r\n\t\t\t\t\tlet typeDecl = ' '.repeat(12) + fieldType.name + (subFieldsList ? `{\\n${subFields + '\\n' + ' '.repeat(12)}}` : '');\r\n\r\n\t\t\t\t\tdeclTypes.push(typeDecl);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e){\r\n\t\t\t\t\tconsole.warn(`error on ${fieldType.name}: ${e}`);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tlet argsWrapper = `(${inputFields\r\n\t\t\t\t.map(([field, type]) => field + (Array.isArray(type) \r\n\t\t\t\t\t? `: {${type.map(ar => ar[0] + ': $' + ar[0]).join(', ')}}`\r\n\t\t\t\t\t: (': $' + field)))\r\n\t\t\t\t.join(', ')})` + `{\\n${declTypes.join(',\\n') + '\\n' + ' '.repeat(8)}}`\t\t\t\t\r\n\r\n\t\t\tconsole.log(mutation);\r\n\r\n\t\t\tlet mutationDecl = `mutation ${mutation.type.name} {\\n${' '.repeat(8)}${mutation.name}${argsWrapper}\\n${' '.repeat(4)}}`;\r\n\r\n\t\t\tlet asType = ''\r\n\t\t\tif (targetFile.endsWith('.ts')){\r\n\t\t\t\tasType = ` as QueryString<'${mutation.type.name}'>`\r\n\t\t\t}\r\n\r\n\t\t\tjsDeclarations += `export const ${mutation.name} = gql\\`\\n${' '.repeat(4) + mutationDecl}\\n\\`` + \r\n\t\t\t\t\t\t\t\t\t`${asType};\\n\\n\\n`\r\n\t\t}\r\n\r\n\r\n\t\tfor (const query of queries) {\r\n\r\n\t\t\tlet queryName = query.name;\r\n\t\t\tlet typeName = query.type.name; // ?? queries.fields[0].type.ofType.name;\r\n\t\t\tlet inInclude = includeTypes ? ~includeTypes.indexOf(queryName) : false\r\n\t\t\t\r\n\t\t\tlet complexFields = []\r\n\t\t\tif (inInclude){\r\n\t\t\t\tcomplexFields = Object.keys(options?.include?.complex?.[queryName]?.fields ?? [])\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tif ((typeName && !(options?.exclude || []).includes(queryName)) || inInclude) {\r\n\r\n\t\t\t\tif (inInclude) typeName = query.type.ofType.name;\r\n\r\n\t\t\t\tlet declType = { name: typeName.slice(0, 1).toLowerCase() + typeName.slice(1) };\r\n\r\n\t\t\t\tlet type = types.find(type => type.name == typeName);\r\n\t\t\t\tlet fields = type?.fields?.filter(field => {\r\n\t\t\t\t\tif (~baseTypes.indexOf(field.type.name) || ~baseTypes.indexOf(field.type.ofType?.name ?? (null + ''))) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (field.description?.toLowerCase().startsWith('nested') || ~complexFields.indexOf(field.name)) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return false;\r\n\t\t\t\t}) || [];\r\n\r\n\t\t\t\tfields = fields.map(field => {\r\n\t\t\t\t\tif (field.description?.toLowerCase().startsWith('nested') || ~complexFields.indexOf(field.name)) {\r\n\r\n\t\t\t\t\t\tlet _typeName = field.type.name;\r\n\t\t\t\t\t\tlet _subTypeFields = []\r\n\t\t\t\t\t\tif (!_typeName){\r\n\t\t\t\t\t\t\t_typeName = field.type.ofType.name;\r\n\t\t\t\t\t\t\t_subTypeFields = options?.include?.complex?.[queryName]?.fields[field.name]\r\n\t\t\t\t\t\t\tif (!_subTypeFields.length){\r\n\t\t\t\t\t\t\t\tconsole.log(`Attention: fields for \"${field.name}\" field is not specified in \"${queryName}\" query`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tlet subType = types.find(type => _typeName == type.name);\r\n\r\n\t\t\t\t\t\tlet subFields = subType.fields\r\n\t\t\t\t\t\t\t.map(f => f.name)\r\n\t\t\t\t\t\tif (_subTypeFields?.length) subFields = subFields\r\n\t\t\t\t\t\t\t.filter(f => ~_subTypeFields.indexOf(f))\r\n\t\t\t\t\t\tsubFields = subFields\r\n\t\t\t\t\t\t\t.reduce((acc, f) => acc + ' '.repeat(16) + f + ',\\n', '')\r\n\r\n\t\t\t\t\t\tfield.name = `${field.name} {\\n${subFields}${' '.repeat(12)}}`\r\n\t\t\t\t\t\treturn field;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse return field;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (!fields.length) declType.query = '';\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tlet args = `(id: $id)`\r\n\t\t\t\t\tif (inInclude && options?.include?.complex) \r\n\t\t\t\t\t{\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet inputFields = options?.include?.complex?.[queryName]?.args;\r\n\r\n\t\t\t\t\t\tif (inputFields.length){\r\n\r\n\t\t\t\t\t\t\targs = `(${inputFields.map(i => `${i}: $${i}`).join(', ')})`\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// if (inputFields.fields?.length){}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet fieldsDecl = fields.map(field => ' '.repeat(12) + field.name).join(',\\n');\r\n\t\t\t\t\tlet rootFieldDecl = ' '.repeat(8) + `${queryName} ${args} {\\n${fieldsDecl}\\n${' '.repeat(8)}}`\r\n\t\t\t\t\tdeclType.query = `${' '.repeat(3)} query ${type.name} {\\n${rootFieldDecl}\\n ${' '.repeat(3)}}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst asType = targetFile.endsWith('.ts') ? ` as QueryString<'${typeName}'>` : '';\r\n\r\n\t\t\t\tjsDeclarations += `export const ${declType.name} = gql\\`\\n${declType.query}\\n\\`${asType};\\n\\n\\n`\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttargetFile = targetFile || process.argv[2];\r\n\r\n\t\tif (options.template) {\r\n\t\t\tlet imports = fs.readFileSync(options.template).toString()\r\n\r\n\t\t\t// if (targetFile.endsWith('.ts') && !~imports.indexOf('QueryString')){\r\n\r\n\t\t\tif (targetFile.endsWith('.ts') && options.template.endsWith('.ts') && !~imports.indexOf('QueryString')){\r\n\t\t\t\timports += \"\\n\\ntype QueryString<T extends string> = `\\n    ${'mutation'|'query'} ${T}${string}`\\n\\n\"\r\n\t\t\t}\r\n\t\t\tjsDeclarations = imports + jsDeclarations;\r\n\t\t}\r\n\r\n\t\tfs.writeFileSync(targetFile, jsDeclarations);\r\n\r\n\t\tconsole.log(`queries generated to \"${targetFile}\"`)\r\n\r\n\t})\r\n\r\n};\r\n\r\nmodule.exports = { default: createQueries, createQueries };\r\n\r\n\r\n\r\nif (process.argv.slice(1).shift() === __filename) {\r\n\tcreateQueries('example.r.ts', {\r\n\t\ttemplate: './template.ts',\r\n\t\t// template: './template.js',\r\n\t\texclude: ['me'],\r\n\t\tinclude: {\r\n\t\t\tbase: [],\r\n\t\t\tcomplex: {\r\n\t\t\t\tposts: {\r\n\t\t\t\t\targs: ['user'],\r\n\t\t\t\t\tfields: {\r\n\t\t\t\t\t\tby: ['id']\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * @depreacted\r\n * @param {*} options \r\n * @returns \r\n */\r\nfunction mutationFilter(options) {\r\n\r\n\tlet mark = options.mutArgsFromDescMarks || ':::';\r\n\r\n\treturn m => {\r\n\r\n\t\tif (!m.description) {\r\n\r\n\t\t\tconsole.log(\"\\x1b[31m\");\r\n\r\n\t\t\tconsole.warn(`${m.name} has no description with types. Use types description with following:`);\r\n\r\n\t\t\tconsole.log(\"\\x1b[34m\");\r\n\t\t\tconsole.log(`\t\t\t\t\r\n\t\t\t\t\t\"\"\":::\r\n\t\t\t\t\tvalue: String\r\n\t\t\t\t\tfiles: JSONString\r\n\t\t\t\t\t\"\"\"\t\t\t\t\r\n\t\t\t\t`);\r\n\r\n\t\t\tconsole.log(\"\\x1b[0m\");\r\n\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn m.description.startsWith(':::');\r\n\t};\r\n}\r\n","//@ts-check\r\n\r\n// const { createQueries } = require(\"./index\");\r\nimport createQueries from \"./index\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\n\r\n\r\n\r\n\r\nconst Helpers = {\r\n\tt: 'target file',\r\n\t'-template': 'template file'\r\n}\r\n\r\n\r\nlet target = resolveFile('-t', 1);\r\n\r\ncreateQueries(target, {\r\n\ttemplate: process.argv.indexOf('--template') ? resolveFile('--template', true) : void 0\r\n})\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {`-${string}`} flag \r\n * @param {boolean|1} [requiredFlag=undefined] \r\n * @returns {string}\r\n */\r\n function resolveFile(flag, requiredFlag) {\r\n\r\n\tlet target = getArgv('-' + flag) || (typeof requiredFlag == 'number' && (Number.isInteger(requiredFlag))\r\n\t\t? process.argv[requiredFlag + 1] \r\n\t\t: null)\r\n\r\n\tif (!target) {\r\n\t\t const errMessage = `the path is not specified (use the -${flag} <filename> option for specify ${Helpers[flag.slice(1)]})`;\r\n\t\t console.warn('\\x1B[31m' + errMessage + '\\x1B[0m')\r\n\t\t process.exit(1)\r\n\t}\r\n\r\n\tif (!path.isAbsolute(target)) {\r\n\t\t target = path.resolve(process.cwd(), target);\r\n\t}\r\n\r\n\tif (requiredFlag && requiredFlag !== undefined && !fs.existsSync(target)) {\r\n\t\t console.log(process.cwd);\r\n\t\t console.warn('\\x1B[31m' + `${target} file not found` + '\\x1B[0m')\r\n\t\t // throw new Error(`${target} file not found`);\r\n\t\t process.exit(1)\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} argk\r\n */\r\nfunction getArgv(argk) {\r\n\tlet index = process.argv.indexOf(argk) + 1\r\n\tif (index) {\r\n\t\t return process.argv[index]\r\n\t}\r\n\telse {\r\n\t\t return null;\r\n\t}\r\n}"],"names":["require$$0","getTypes","http","fs","path","createQueries"],"mappings":"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"}